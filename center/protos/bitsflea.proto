syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/any.proto";

package bitsflea;
service BitsFlea {

    rpc Register (RegisterRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/register"
            body: "*"
        };
    }

    rpc SendSmsCode (SmsRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/sendSmsCode"
            body: "*"
        };
    }

    rpc RefreshToken (RefreshTokenRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/refreshtoken"
            body: "*"
        };
    }

    rpc Referral (EosidRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/Referral"
            body: "*"
        };
    }

    rpc Search (SearchRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/search"
            body: "*"
        };
    }

    rpc Transaction (TransactionRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/transaction"
            body: "*"
        };
    }

    rpc Follow (FollowRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/follow"
            body: "*"
        };
    }

    rpc UnFollow (FollowRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/unfollow"
            body: "*"
        };
    }

    rpc Favorite (FavoriteRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/favorite"
            body: "*"
        };
    }

    rpc UnFavorite (FavoriteRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/unfavorite"
            body: "*"
        };
    }

    rpc Address (AddressRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/address"
            body: "*"
        };
    }

    rpc UpdateAddress (AddressRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/updateaddress"
            body: "*"
        };
    }

    rpc DelAddress (AddressRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/deladdress"
            body: "*"
        };
    }

    rpc SetDefaultAddr (SetDefaultAddrRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/setdefault"
            body: "*"
        };
    }

    rpc Upload (FileRequest) returns (BaseReply){}

    rpc CreatePayInfo (PayInfoRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/createpayinfo"
            body: "*"
        };
    }

    rpc LogisticsInfo (LogisticsRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/logisticsinfo"
            body: "*"
        };
    }

    rpc GetPhone (GetPhoneRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/getphone"
            body: "*"
        };
    }

    rpc GetConfig (SearchRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/getconfig"
            body: "*"
        };
    }

}

message BaseReply {
    int32 code = 1;
    string msg = 2;
    google.protobuf.Any data = 3;
}

message FileRequest {
    bytes file = 1;
    string name = 2;
}

message EosidRequest {
    string eosid = 1;
}

message User {
    int32 userid = 1;
    string eosid = 2;
    string phone = 3;
    int32 status = 4;
    string nickname = 5;
    string head = 6;
    int32 creditValue = 7;
    string referrer = 8;
    string lastActiveTime = 9;
    int32 postsTotal = 10;
    int32 sellTotal = 11;
    int32 buyTotal = 12;
    int32 referralTotal = 13;
    string point = 14;
    bool isReviewer = 15;
    int32 followTotal = 16;
    int32 favoriteTotal = 17;
    int32 fansTotal = 18;
    string authKey = 19;
}

message RegisterRequest {
    string phone = 1;
    string nickname = 2;
    string ownerpubkey = 3;
    string actpubkey = 4;
    string smscode = 5;
    string referral = 6;
    string authkey = 7;
    string phoneEncrypt = 8;
}

message SmsRequest {
    string phone = 1;
    int32 codeType = 2;
}

message RefreshTokenRequest {
    string phone = 1;
    string token = 2;
    int32 time = 3;
    string sign = 4;
}

message Category {
    int32 cid = 1;
    string view = 2;
    int32 parent = 3;
}

message Product {
    uint32 productId = 1;
    Category category = 2;
    string title = 3;
    uint32 status = 4;
    bool isNew = 5;
    bool isReturns = 6;
    uint32 transMethod = 7;
    string postage = 8;
    string position = 9;
    string releaseTime = 10;
    string description = 11;
    repeated string photos = 12;
    uint32 collections = 13;
    string price = 14;
    uint32 saleMethod = 15;
    User seller = 16;
    uint32 stockCount = 17;
    bool isRetail = 18;
}

message Auction {
    uint64 aid = 1;
    Product product = 2;
    string security = 3;
    string markup = 4;
    string currentPrice = 5;
    uint32 auctionTimes = 6;
    User lastPriceUser = 7;
    string startTime = 8;
    string endTime = 9;
}

message SearchRequest {
    string query = 1;
}

message TransactionRequest {
    string trx = 1;
    int32 sign = 2;
}

message FollowRequest {
    int32 user = 1;
    int32 follower = 2;
}

message FavoriteRequest {
    int32 user = 1;
    int32 product = 2;
}

message AddressRequest {
    int32 rid = 1;
    int32 userid = 2;
    string province = 3;
    string city = 4;
    string district = 5;
    string phone = 6;
    string name = 7;
    string address = 8;
    string postcode = 9;
    bool isDefault = 10;
}

message SetDefaultAddrRequest {
    int32 userid = 1;
    int32 rid = 2;
}

message Reviewer {
    uint64 rid = 1;
    User user = 2;
    string eosid = 3;
    int32 votedCount = 4;
    string createTime = 5;
    string lastActiveTime = 6;
    repeated uint64 voterApprove = 7;
    repeated uint64 voterAgainst = 8;
}

message ProductAudit {
    uint64 paid = 1;
    Product product = 2;
    User reviewer = 3;
    bool isDelisted = 4;
    string reviewDetails = 5;
    string reviewTime = 6;
}

message Order {
    uint64 oid = 1;
    string orderid = 2;
    Product productInfo = 3;
    User seller = 4;
    User buyer = 5;
    uint32 status = 6;
    string price = 7;
    string postage = 8;
    string payAddr = 9;
    string shipNum = 10;
    string createTime = 11;
    string payTime = 12;
    string payOutTime = 13;
    string shipTime = 14;
    string shipOutTime = 15;
    string receiptTime = 16;
    string receiptOutTime = 17;
    string endTime = 18;
    uint32 delayedCount = 19;
    uint32 toAddr = 20;
}

message ProReturn {
    uint32 prid = 1;
    Order order = 2;
    Product product = 3;
    string orderPrice = 4;
    uint32 status = 5;
    string reasons = 6;
    string createTime = 7;
    string shipNum = 8;
    string shipTime = 9;
    string shipOutTime = 10;
    string receiptTime = 11;
    string receiptOutTime = 12;
    string endTime = 13;
    uint32 delayedCount = 14;
    uint32 toAddr = 15;
}

message Arbitration {
    uint32 aid = 1;
    uint64 plaintiff = 2;
    uint32 product = 3;
    string order = 4;
    uint32 type = 5;
    uint32 status = 6;
    string title = 7;
    string resume = 8;
    string detailed = 9;
    string createTime = 10;
    uint64 defendant = 11;
    string proofContent = 12;
    string arbitrationResults = 13;
    uint64 winner = 14;
    string startTime = 15;
    string endTime = 16;
    repeated uint64 reviewers = 17;
}

message OtherAddr {
    uint32 oaid = 1;
    uint64 user = 2;
    string coinType = 3;
    string addr = 4;
}

message ReceiptAddress {
    uint32 rid = 1;
    uint64 userid = 2;
    string province = 3;
    string city = 4;
    string district = 5;
    string phone = 6;
    string name = 7;
    string address = 8;
    string postcode = 9;
    bool isDefault = 10;
}

message PayInfo {
    string orderid = 1;
    double amount = 2;
    string symbol = 3;
    string payAddr = 4;
    uint64 userId = 5;
    uint32 productId = 6;
    uint32 payMode = 7;
    double balance = 8;
}

message PayInfoRequest {
    uint64 userId = 1;
    uint32 productId = 2;
    double amount = 3;
    string symbol = 4;
    bool mainPay = 5;
    string orderid = 6;
}

message LogisticsRequest {
    string com = 1;
    string number = 2;
    uint64 userId = 3;
}

message GetPhoneRequest {
    uint32 fromUserId = 1;
    uint32 toUserId = 2;
}

message Config {
    string mainContract = 1;
    string eosAPI = 2;
    string ipfsGateway = 3;
    string mainTokenContract = 4;
    string eosTokenContract = 5;
    string bosIBCContract = 6;
    string mainAssetSymbol = 7;
    string amapDistrictKey = 8;
    bool showCNY = 9;
}