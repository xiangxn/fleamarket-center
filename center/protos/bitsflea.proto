syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/any.proto";

package bitsflea;
service BitsFlea {

    rpc Register (RegisterRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/register"
            body: "*"
        };
    }

    rpc SendSmsCode (SmsRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/sendSmsCode"
            body: "*"
        };
    }

    rpc RefreshToken (RefreshTokenRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/refreshtoken"
            body: "*"
        };
    }

    rpc Referral (EosidRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/Referral"
            body: "*"
        };
    }

    rpc Search (SearchRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/search"
            body: "*"
        };
    }

    rpc Transaction (TransactionRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/transaction"
            body: "*"
        };
    }

    rpc Follow (FollowRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/follow"
            body: "*"
        };
    }

    rpc UnFollow (FollowRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/unfollow"
            body: "*"
        };
    }

    rpc Favorite (FavoriteRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/favorite"
            body: "*"
        };
    }

    rpc UnCollect (FavoriteRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/unfavorite"
            body: "*"
        };
    }

    rpc Address (AddressRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/address"
            body: "*"
        };
    }

    rpc UpdateAddress (AddressRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/updateaddress"
            body: "*"
        };
    }

    rpc DelAddress (AddressRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/deladdress"
            body: "*"
        };
    }

    rpc SetDefaultAddr (SetDefaultAddrRequest) returns (BaseReply) {
        option (google.api.http) = {
            post: "/v1/common/setdefault"
            body: "*"
        };
    }

    rpc Upload (FileRequest) returns (BaseReply){}

}

message BaseReply {
    int32 code = 1;
    string msg = 2;
    google.protobuf.Any data = 3;
}

message FileRequest {
    bytes file = 1;
    string name = 2;
}

message EosidRequest {
    string eosid = 1;
}

message User {
    int32 userid = 1;
    string eosid = 2;
    string phone = 3;
    int32 status = 4;
    string nickname = 5;
    string head = 6;
    int32 creditValue = 7;
    string referrer = 8;
    string lastActiveTime = 9;
    int32 postsTotal = 10;
    int32 sellTotal = 11;
    int32 buyTotal = 12;
    int32 referralTotal = 13;
    string point = 14;
    int32 isReviewer = 15;
    int32 followTotal = 16;
    int32 favoriteTotal = 17;
    int32 fansTotal = 18;
    string authKey = 19;
}

message RegisterRequest {
    string phone = 1;
    string nickname = 2;
    string ownerpubkey = 3;
    string actpubkey = 4;
    string smscode = 5;
    string referral = 6;
    string authkey = 7;
    string phoneEncrypt = 8;
}

message SmsRequest {
    string phone = 1;
    int32 codeType = 2;
}

message RefreshTokenRequest {
    string phone = 1;
    string token = 2;
    int32 time = 3;
    string sign = 4;
}

message SearchRequest {
    string query = 1;
}

message TransactionRequest {
    string trx = 1;
    int32 sign = 2;
}

message FollowRequest {
    int32 user = 1;
    int32 follower = 2;
}

message FavoriteRequest {
    int32 user = 1;
    int32 product = 2;
}

message AddressRequest {
    int32 rid = 1;
    int32 userid = 2;
    string province = 3;
    string city = 4;
    string district = 5;
    string phone = 6;
    string name = 7;
    string address = 8;
    string postcode = 9;
    int32 default = 10;
}

message SetDefaultAddrRequest {
    int32 userid = 1;
    int32 rid = 2;
}

